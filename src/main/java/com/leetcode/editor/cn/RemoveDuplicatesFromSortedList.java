package com.leetcode.editor.cn;

//ÁªôÂÆö‰∏Ä‰∏™ÊéíÂ∫èÈìæË°®ÔºåÂà†Èô§ÊâÄÊúâÈáçÂ§çÁöÑÂÖÉÁ¥†Ôºå‰ΩøÂæóÊØè‰∏™ÂÖÉÁ¥†Âè™Âá∫Áé∞‰∏ÄÊ¨°„ÄÇ 
//
// Á§∫‰æã 1: 
//
// ËæìÂÖ•: 1->1->2
//ËæìÂá∫: 1->2
// 
//
// Á§∫‰æã 2: 
//
// ËæìÂÖ•: 1->1->2->3->3
//ËæìÂá∫: 1->2->3 
// Related Topics ÈìæË°® 
// üëç 492 üëé 0

import com.leetcode.editor.cn.list.ListNode;

public class RemoveDuplicatesFromSortedList {
    public static void main(String[] args) {
        Solution solution = new RemoveDuplicatesFromSortedList().new Solution();
    }
    //leetcode submit region begin(Prohibit modification and deletion)

    /**
     * Definition for singly-linked list. public class ListNode { int val; ListNode next; ListNode() {} ListNode(int
     * val) { this.val = val; } ListNode(int val, ListNode next) { this.val = val; this.next = next; } }
     */
    class Solution {
        public ListNode deleteDuplicates(ListNode head) {
            ListNode current = head;
            while (current != null && current.next != null) {
                int val = current.val;
                ListNode next = current.next;
                if (next.val != val) {
                    current = next;
                } else {
                    current.next = next.next;
                }
            }
            return head;
        }
    }
//leetcode submit region end(Prohibit modification and deletion)

}